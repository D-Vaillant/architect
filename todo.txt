=== Architectural Considerations ===

* Implement a Chapter System - allow episodes.

* Implement Endings. I can't end a game naturally so far.

* Implement Saving! Very important.

* Implement obfuscation of resource files. Also very important.

=== Engine Features ===

* Add in Sentinel.

* Write BP for Sentinel features - watching and triggering.

=== On Modules ===

An idea I had: have Game load objects known as "Modules" which contain all the
information about the game.

Some things I want to be able to do:
    Modules can be recursive, calling other Modules.
    Submodules return Termination Values which Modules can respond to.
        i.e., "Dream Sequence" where actions result in different things.
        Return types can be anything.

    Rooms can exist just within Modules but Items are a bit trickier to
    figure out.

    I guess it's related to the question of modal logic. 
        Do possible objects exist? Or should I have them exist as "potentials"
        which are instantiated?
        
        If the former, in which way do they exist? If the latter, how do I
        have it so th at instantiated objects can be passed into parent Modules?
        
    How does the Actor class interact with submodules? Both the Player class
    and the other Actors.


